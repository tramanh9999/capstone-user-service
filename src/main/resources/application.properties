spring.application.name=user-service
server.port=${PORT:8002}
#eureka.client.service-url.defaultZone=http://localhost:9000/eureka/
eureka.client.service-url.defaultZone=https://capstone-eureka-server.herokuapp.com/eureka/

#mail
spring.mail.host=smtp.gmail.com
spring.mail.smtp.starttls.enable=true
spring.mail.port=587
spring.mail.password=Storyart@123
spring.mail.username=storyartcapstone@gmail.com

spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.protocol=smtp
spring.mail.test-connection= false

## MySQL
spring.datasource.url=jdbc:mysql://103.7.40.96:3306/storyart_db?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=storyart
spring.datasource.password=Storyart@123

## jwt secrect key: The secret key is combined with the header and the payload to create a unique hash. We are only able to verify this hash if you have the secret key.
jwt.secret=user-service
# this time equal to 7 days long , 7*24*60*60*1000
jwt.expirationInMs=604800000
#`hibernate_sequence' doesn't exist (7*86400000)
spring.jpa.hibernate.use-new-id-generator-mappings=false
# drop n create table, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create
# spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql = true
#eureka client
eureka.instance.hostName=capstone-user-service.herokuapp.com
eureka.instance.homePageUrl=https://${eureka.hostname}
password.expiryMinutes=30
eureka.instance.statusPageUrlPath=${eureka.instance.homePageUrl}/actuator/info
eureka.instance.healthCheckUrlPath=${eureka.instance.homePageUrl}/actuator/health




